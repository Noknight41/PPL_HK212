
        Class myClass : parentClass {
            Var a, b, c: Boolean;
            Var a, $e : String = "Hello", "Hola";
            Var w, $q : Array[String, 3] = Array (1, 5, 7), Array (1, 5, "s");
            Val f, G : Float;
            Val $h, _Jk : Int = a.b(), a[1][2] + a::$ac;
            Val o: Object = New Object();
            Val x : Name;
            Var y : Something;
            Var $a : Array[Array[Array[Int,2],3],4] = 1;
            method1(){
                ## Vardecls ##
                Var a, b, c: Boolean;
                Var a, e : String = "Hello", "Hola";
                Var w, q : Array[String, 3] = Array (1, 5, 7), Array (1, 5, "s");
                ## ConstDecls ##
                Val f, G : Float;
                Val h, _Jk : Int = a.b(), a[1][2] + a::$ac;
                Val o: Object = New Object();
                Val x : Name;
                Var y : Something;
                ## Assignments ##

            }
            
            statement(a, b, c: Boolean; j: Classtype){
                thisIs_anId = Array (1, 5, 7) + 1.2 * 0x12AB / (- 01100) +. Null;
                Somevar = b.X()[2][True];
                staticId::$a.Id = !(a <= b) % 2 + a.b(); 
                Self.a.h = Id::$a.B(Array (1, 5, 7) + 1.2, !(a <= b) % 2 + a.b());
                (A[1][2])[True] = New x() + 2 * New Y();
                (a[1][True]["Hola"])[2][1+2]["Hey"]["What"] = Array (Array (1, 5, 7), Array (1, 5, 7), Array (1, 5, 7));
                Return;
                Return !True + (False - 2 % 8) + b.asb(!True + (False - 2 % 8), 1).a;
                New X().a.b();
                b.asb(!True + (False - 2 % 8));
                asa::$jas();
            }
            
            $if_statement(){
                If (True && False) {New X().a.b();}
                If (Self.a[1][2]) { ## Do something ## } Else {
                    Foreach (i In 1 .. 100 By 2) {
                    Out.printInt(i);
                    }
                    If (123 >= 45) {asa::$jas();} Elseif (45 == 455) {
                        Val x : Name;
                        Var y : Something;
                    }
                }
                If (123 >= 45) {asa::$jas();} Elseif (45 == 455) {}
                If ("hi" >= 45) {asa::$jas();} Elseif (False) {} Else {Break;}
            }
            main(){
                Foreach (i In 1 .. 100 By 2) {
                    Out.printInt(i);
                }
                Foreach (i In 1 .. 100 By !True + (False - 2 % 8)) {
                    If (123 >= 45) {asa::$jas();} Elseif (45 == 455) {}
                    If ("hi" >= 45) {asa::$jas();} Elseif (False) {} Else {}
                    Foreach (x In 5 .. 2) { Break; }
                    Continue;
                }
            }
            Constructor(){
                Var a, e : String = "Hello", "Hola";
                Var w, q : Array[String, 3] = Array (1, 5, 7), Array (1, 5, "s");
                If (123 >= 45) {asa::$jas();} Elseif (45 == 455) {} Elseif (45 == 455) {} Elseif (45 == 455) {} Elseif (45 == 455) {} Else {}
            }
            Constructor(f, G : Float; a, b, c: Boolean){
                Return;
            }
            Destructor(){
                If (123 >= 45) { Return; }
            }
        }
        
        Class otherClass {
            Val $h, _Jk : Int = a.b(), a[1][2] + a::$ac;
            Val o: Object = New Object();
            main(){
                If ("ah") {
                    Foreach (i In 1 .. 100 By 2) {
                        Var r, s: Int;
                        r = 2.0;
                        Var a, b: Array[Int, 5];
                        s = r * r * Self;
                        a[0] = s;
                        a = "## adfa ##";
                    }
                }
                Var Student : Student = New Student();
            }
        }
        
        Class Program {
            main(){
                If ("ah") {
                    Var r, s: Int;
                    r = 2.0;
                    Var a, b: Array[Int, 5];
                    s = r * r * Self;
                    a[0] = s;
                    a = "## adfa ##";
                }
                Var Student : Student = New Student();
            }
            
            main(a, b, c: Boolean; e: Int){
                Var Student : Student = New Student();
                Foreach (i In 1 .. 100 By 2) {
                    Continue;
                }
            }
        }
        