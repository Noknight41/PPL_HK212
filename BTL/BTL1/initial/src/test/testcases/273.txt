
	    Class Node {
		    Var data : Int;
		    Val next : Node;

		    Constructor(d : Int){
			    data = d;
			    next = Null;
		    }

            ## Function to reverse the linked list ##
            reverse(node : Node){
                Var prev : Node = Null;
                Val current : Node = node;
                Val next : Node = Null;
                Foreach (i In 1 .. forever By 1) {
                    If (current == Null) {
                        Break;
                    } Else {
                        next = current.next;
                        current.next = prev;
                        prev = current;
                        current = next;
                    }
                }
                node = prev;
                Return node;
            }

            printList(node : Node){
                Foreach (a In 1 .. infinity By 1) {
                    If (node != Null) {
                        System.out.print(node.data +. " ");
                        node = node.next;
                    } Else {
                        Break;
                    }
                }
            }
        }

        Class Program {
            main()
            {
                Val list : LinkedList = New LinkedList();
                list.head = New Node(85);
                list.head.next = New Node(15);
                list.head.next.next = New Node(4);
                list.head.next.next.next = New Node(20);

                System.out.println("Given Linked list");
                list.printList(head);
                head = list.reverse(head);
                list.printList(head);
            }
        }
        