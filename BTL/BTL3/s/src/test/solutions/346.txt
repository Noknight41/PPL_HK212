Program([ClassDecl(Id(PrimeNumber),[MethodDecl(Id(isPrimeNumber),Instance,[param(Id(n),IntType)],Block([For(Id(i),IntLit(2),BinaryOp(/,Id(n),IntLit(2)),IntLit(1),Block([If(BinaryOp(==,BinaryOp(%,Id(n),Id(i)),IntLit(0)),Block([Return(Id(false))]))])]),Return(Id(true))]))]),ClassDecl(Id(Fibonacci),[MethodDecl(Id(isFibonacci),Instance,[param(Id(n),IntType)],Block([VarDecl(Id(a),IntType,IntLit(0)),VarDecl(Id(b),IntType,IntLit(1)),VarDecl(Id(Sum),IntType,IntLit(0)),For(Id(Sum),IntLit(0),Id(n),IntLit(1),Block([AssignStmt(Id(Sum),BinaryOp(+,Id(a),Id(b))),AssignStmt(Id(a),Id(b)),AssignStmt(Id(b),Id(Sum)),If(BinaryOp(==,Id(n),Id(Sum)),Block([Return(Id(true))])),Return(Id(false))])])]))]),ClassDecl(Id(TriangleNumber),[MethodDecl(Id(isTriangleNumber),Instance,[param(Id(n),IntType)],Block([Return(BinaryOp(/,BinaryOp(*,Id(n),BinaryOp(+,Id(n),IntLit(1))),IntLit(2)))]))]),ClassDecl(Id(Display),[MethodDecl(Id(display),Instance,[param(Id(pR),FloatType)],Block([If(BinaryOp(<,Id(pR),IntLit(0)),Block([AssignStmt(Id(pR),IntLit(0))])),If(BinaryOp(>,Id(pR),IntLit(1)),Block([AssignStmt(Id(pR),IntLit(1))])),AssignStmt(Id(pR),BinaryOp(/,CallExpr(Id(System),Id(round),[BinaryOp(*,Id(pR),IntLit(1000))]),IntLit(1000))),Call(Id(Out),Id(print),[Id(pR)])]))]),ClassDecl(Id(Program),[MethodDecl(Id(main),Static,[],Block([VarDecl(Id(hp),IntType,IntLit(0)),VarDecl(Id(d),IntType,IntLit(0)),VarDecl(Id(s),IntType,IntLit(0)),VarDecl(Id(P1),FloatType,IntLit(0)),VarDecl(Id(P2),FloatType,IntLit(0)),VarDecl(Id(f),FloatType,IntLit(0)),VarDecl(Id(pR),FloatType,UnaryOp(-,IntLit(1))),If(CallExpr(Id(System),Id(readFile),[Id(hp),Id(d),Id(s)]),Block([If(CallExpr(Id(PrimeNumber),Id(isPrimeNumber),[Id(hp)]),Block([AssignStmt(Id(P1),IntLit(1000)),AssignStmt(Id(P2),BinaryOp(%,BinaryOp(+,Id(hp),Id(s)),IntLit(1000)))]),Block([AssignStmt(Id(P1),Id(hp)),AssignStmt(Id(P2),BinaryOp(%,BinaryOp(+,Id(hp),Id(d)),IntLit(100)))]))])),VarDecl(Id(g),FloatType),If(BinaryOp(<,Id(d),BinaryOp(&&,IntLit(200),UnaryOp(!,CallExpr(Id(Fibonacci),Id(isFibonacci),[BinaryOp(+,Id(d),Id(s))])))),Block([AssignStmt(Id(f),IntLit(0))]),If(BinaryOp(||,BinaryOp(&&,BinaryOp(>=,Id(d),IntLit(200)),BinaryOp(<=,Id(d),IntLit(800))),BinaryOp(<,Id(d),BinaryOp(&&,IntLit(200),CallExpr(Id(Fibonacci),Id(isFibonacci),[BinaryOp(+,Id(d),Id(s))])))),Block([If(BinaryOp(==,BinaryOp(%,Id(s),IntLit(6)),IntLit(0)),Block([AssignStmt(Id(g),BinaryOp(/,Id(s),IntLit(2)))]),If(BinaryOp(==,BinaryOp(%,Id(s),IntLit(6)),IntLit(1)),Block([AssignStmt(Id(g),BinaryOp(*,IntLit(2),Id(s)))]),If(BinaryOp(==,BinaryOp(%,Id(s),IntLit(6)),IntLit(2)),Block([AssignStmt(Id(g),BinaryOp(/,UnaryOp(-,CallExpr(Id(Math),Id(pow),[BinaryOp(%,Id(s),IntLit(9)),IntLit(3)])),IntLit(5)))]),If(BinaryOp(==,BinaryOp(%,Id(s),IntLit(6)),IntLit(3)),Block([AssignStmt(Id(g),BinaryOp(+,UnaryOp(-,CallExpr(Id(Math),Id(pow),[BinaryOp(%,Id(s),IntLit(30)),IntLit(2)])),BinaryOp(*,IntLit(3),Id(s))))]),If(BinaryOp(==,BinaryOp(%,Id(s),IntLit(6)),IntLit(4)),Block([AssignStmt(Id(g),UnaryOp(-,Id(s)))]),If(BinaryOp(==,BinaryOp(%,Id(s),IntLit(6)),IntLit(5)),Block([AssignStmt(Id(g),UnaryOp(-,CallExpr(Id(TriangleNumber),Id(isTriangleNumber),[BinaryOp(+,BinaryOp(%,Id(s),IntLit(5)),IntLit(5))])))]))))))),AssignStmt(Id(f),BinaryOp(+,BinaryOp(-,IntLit(40),BinaryOp(/,CallExpr(Id(Math),Id(abs),[BinaryOp(-,Id(d),IntLit(500))]),IntLit(20))),Id(g)))]),If(BinaryOp(>,Id(d),IntLit(800)),Block([AssignStmt(Id(f),BinaryOp(/,BinaryOp(*,UnaryOp(-,Id(d)),Id(s)),IntLit(1000)))])))),VarDecl(Id(Bitten),FloatType),If(BinaryOp(&&,BinaryOp(>=,Id(d),IntLit(200)),BinaryOp(<=,Id(d),IntLit(300))),Block([AssignStmt(Id(Bitten),BinaryOp(/,BinaryOp(+,BinaryOp(+,Id(d),Id(P1)),Id(P2)),IntLit(1000))),If(BinaryOp(>,Id(Bitten),FloatLit(0.8)),Block([AssignStmt(Id(pR),IntLit(0))]))]),Block([AssignStmt(Id(pR),BinaryOp(/,BinaryOp(+,Id(P1),BinaryOp(*,Id(P2),Id(f))),BinaryOp(+,IntLit(1000),CallExpr(Id(Math),Id(abs),[BinaryOp(*,Id(P2),Id(f))]))))])),Call(Id(Display),Id(display),[Id(pR)])]))])])